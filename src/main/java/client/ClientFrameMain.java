package main.java.client;
import com.intellij.uiDesigner.core.GridLayoutManager;
import main.java.client.listeners.ClientAppListener;
import main.java.client.listeners.ClientLoginListener;
import main.java.client.listeners.ClientMenuListener;
import main.java.client.listeners.ClientOrderListener;
import main.java.client.ui.ClientFrameApp;
import main.java.client.ui.ClientFrameLogin;
import main.java.client.ui.ClientFrameMenu;
import main.java.client.ui.ClientFrameOrder;
import main.java.model.*;

import javax.swing.*;
import java.awt.*;

public class ClientFrameMain extends JFrame {

    /*
        scene:
            0 - Login
            1 - Menu
            2- Main
     */
    private int scene = 0;

    public static int LOGIN_SCENE = 0;
    public static int MENU_SCENE = 1;
    public static int MAIN_SCENE = 2;
    public static int ORDER_SCENE = 3;

    private User loginUser = null;
    private GenericDLinkedList<Order> order_list = null;
    private GenericDLinkedList<OrderDetail> order_list_detail = null;
    private GenericDLinkedList<Goods> goodsList = null;

    //Frame Login
    ClientLoginListener cll = new ClientLoginListener(this);
    ClientFrameLogin clientFrameLogin;

    //Frame app
    ClientAppListener cal = new ClientAppListener(this);
    ClientFrameApp clientFrameApp;

    //Frame menu
    ClientMenuListener cml = new ClientMenuListener(this);
    ClientFrameMenu clientFrameMenu;

    //Frame order
    ClientOrderListener col = new ClientOrderListener(this);
    ClientFrameOrder clientFrameOrder;


    public ClientFrameMain() {
        clientFrameMenu = new ClientFrameMenu(cml);
        clientFrameLogin = new ClientFrameLogin(cll);
        clientFrameApp = new ClientFrameApp(cal);
        clientFrameOrder = new ClientFrameOrder(col);

        setScene(LOGIN_SCENE); // Login scene by default

        this.setTitle("Client Local Delivery");
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.setSize(new Dimension(clientFrameLogin.getAppWidth(), clientFrameLogin.getAppHeight()));
        this.setLocationRelativeTo(null); // Center app
        this.setVisible(true);
    }

    public void setScene(int scene) {
        if (scene == LOGIN_SCENE) {
            this.setSize(new Dimension(clientFrameLogin.getAppWidth(), clientFrameLogin.getAppHeight()));
            this.setLocationRelativeTo(null); // Center app
            this.setContentPane(clientFrameLogin.getContentPane());
        } else if (scene == MENU_SCENE) {
            this.setSize(new Dimension(clientFrameMenu.getAppWidth(), clientFrameMenu.getAppHeight()));
            this.setLocationRelativeTo(null); // Center app
            this.setContentPane(clientFrameMenu.getContentPane());
        } else if (scene == MAIN_SCENE) {
            this.setSize(new Dimension(clientFrameApp.getAppWidth(), clientFrameApp.getAppHeight()));
            this.setLocationRelativeTo(null); // Center app
            this.setContentPane(clientFrameApp.getContentPane());
        } else if (scene == ORDER_SCENE) {
            this.setSize(new Dimension(clientFrameOrder.getAppWidth(), clientFrameOrder.getAppHeight()));
            this.setLocationRelativeTo(null); // Center app
            this.setContentPane(clientFrameOrder.getContentPane());
        }
        this.setVisible(true);
//        this.repaint(); // Repaint to refresh screen
    }


    public ClientFrameLogin getClientFrameLogin() {
        return clientFrameLogin;
    }

    public ClientFrameApp getClientFrameApp() {
        return clientFrameApp;
    }

    public ClientFrameMenu getClientFrameMenu() {
        return clientFrameMenu;
    }

    public ClientFrameOrder getClientFrameOrder() {
        return clientFrameOrder;
    }

    public User getLoginUser() {
        return loginUser;
    }

    public void setLoginUser(User loginUser) {
        this.loginUser = loginUser;
    }

    public GenericDLinkedList<Order> getOrderList() {
        return order_list;
    }

    public void setOrderList(GenericDLinkedList<Order> order_list) {
        this.order_list = order_list;
    }

    public GenericDLinkedList<OrderDetail> getOrderListDetail() {
        return order_list_detail;
    }

    public void setOrderListDetail(GenericDLinkedList<OrderDetail> order_list_detail) {
        this.order_list_detail = order_list_detail;
    }

    public GenericDLinkedList<Goods> getGoodsList() {
        return goodsList;
    }

    public void setGoodsList(GenericDLinkedList<Goods> goodsList) {
        this.goodsList = goodsList;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
    }
}
